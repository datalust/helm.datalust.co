# Default values for Seq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: datalust/seq
  # Specify a tag to pull a specific version of the Seq container
  # By default the version of the chart will be used as the tag
  # tag: latest
  pullPolicy: IfNotPresent

# By passing the value Y in the ACCEPT_EULA environment variable,
# you are expressing that you have read and accepted the terms in
# Seq End User License Agreement applicable to the Seq Docker image
# that you intend to use.
acceptEULA: "Y"

# Set this URL if you enable ingress and/or AAD authentication.
# Without this URL set to include HTTPS, Seq will try to set a login redirect
# URL with HTTP instead of HTTPS and AAD's registration requires HTTPS.
# The result is that you'll get an error during login:
#   AADSTS50011: The reply url specified in the request does not match the reply urls configured for the application
# baseURI: https://my.public.url/

# Set the addresses that the server will listen on. The first entry listed
# will be used as the default when generating URIs for apps and notifications.
# listenURI: "http://localhost:80,http://localhost:5341"

# Set this to create an admin user with given password hash at first run.
# See here for docs on how to create the password hash: https://blog.datalust.co/setting-an-initial-password-when-deploying-seq-to-docker/
# firstRunAdminUsername: "admin"
# firstRunAdminPasswordHash: ""
# firstRunRequireAuthenticationForHttpIngestion: true

securityContext:
  runAsUser: 0
  capabilities:
    add:
      - NET_BIND_SERVICE

# The complete Seq API and UI.
# This API can accept events and serve API requests.
ui:
  containerPort: 80
  service:
    port: 80
  ingress:
    enabled: false
    path: /
    hosts: []

# The ingestion-only API.
# This API is a subset of ui that can only ingest events.
ingestion:
  containerPort: 5341
  service:
    port: 5341
  ingress:
    enabled: false
    path: /
    hosts: []

# Accept events in the GELF format and forward them to Seq.
gelf:
  enabled: false
  image:
    repository: datalust/seq-input-gelf
    pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 0
    capabilities:
      add:
        - NET_BIND_SERVICE
  service:
    port: 12201
    # GELF can be ingested through either TCP or UDP
    protocol: TCP

# Accept events in the Syslog format and forward them to Seq.
syslog:
  enabled: false
  image:
    repository: datalust/seq-input-syslog
    pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 0
    capabilities:
      add:
        - NET_BIND_SERVICE
  service:
    port: 514
    # Only UDP is currently supported for ingesting Syslog
    protocol: UDP

service:
  type: ClusterIP

ingress:
  # className: nginx
  annotations: {}
    # kubernetes.io/tls-acme: "true"
  labels: {}
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Network Policy configuration
## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
networkPolicy:
  enabled: false
  ingress:
  - {}
  egress:
  - {}
  # Example which allows DNS resolution:
  # egress:
  #     # Allow dns resolution
  # - ports:
  #   - port: 53
  #     protocol: UDP
  #   - port: 53
  #     protocol: TCP

resources: {}
  # We recommend uncommenting these and specifying an explicit memory limit that
  # suits your workload.
  # limits:
  #  memory: 2Gi

nodeSelector: {}

tolerations: []

affinity: {}

imagePullSecrets: []

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  enabled: true

  ## The path the volume will be mounted at
  path: /data

  ## The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services.
  subPath: ""

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## Seq data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 8Gi

serviceAccount:
  create: false
  name:

## Enable RBAC
rbac:
  create: false
  rules: []

## Configure probe values
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
livenessProbe:
  enabled: true
  failureThreshold: 3
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

readinessProbe:
  enabled: true
  failureThreshold: 3
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

startupProbe:
  enabled: true
  failureThreshold: 30
  periodSeconds: 10

# Additional volumes to mount on the Seq container
# These can be used to mount init scripts and certificates
extraVolumes: []
# - name: seq-setup-volume
#   configMap:
#     name: seq-setup-map
extraVolumeMounts: []
# - name: seq-setup-volume
#   mountPath: /extra-stuff

# Additional environment variables to set on the Seq container
# These can be used to set Seq configuration values that aren't
# exposed directly through the chart
extraEnvs: []
# - name: MY_ENV_VAR
#   value: "Some Value"
